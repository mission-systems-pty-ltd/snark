# set( dir ${SOURCE_CODE_BASE_DIR}/ros/applications )

if(EXISTS "/opt/ros/groovy")
    set(ros_path "/opt/ros/groovy" CACHE STRING "Path to ROS Groovy" FORCE)
elseif(EXISTS "/opt/ros/hydro")
    set(ros_path "/opt/ros/hydro" CACHE STRING "Path to ROS Hydro" FORCE)
elseif(EXISTS "/opt/ros/indigo")
    set(ros_path "/opt/ros/indigo" CACHE STRING "Path to ROS Indigo" FORCE)
elseif(EXISTS "/opt/ros/jade")
    set(ros_path "/opt/ros/jade" CACHE STRING "Path to ROS Jade" FORCE)
elseif(EXISTS "/opt/ros/kinetic")
    set(ros_path "/opt/ros/kinetic" CACHE STRING "Path to ROS Kinetic" FORCE)
elseif(EXISTS "/opt/ros/lunar")
    set(ros_path "/opt/ros/lunar" CACHE STRING "Path to ROS Lunar" FORCE)
elseif(EXISTS "/opt/ros/melodic")
    set(ros_path "/opt/ros/melodic" CACHE STRING "Path to ROS Melodic" FORCE)
elseif(EXISTS "/opt/ros/noetic")
    set(ros_path "/opt/ros/noetic" CACHE STRING "Path to ROS Noetic" FORCE)
else()
    message( "ros not found; please specify ros path as something like /opt/ros/melodic on your computer or set snark_build_ros to OFF" )
    set( ros_path "NOT FOUND" CACHE STRING "path to ros, something like /opt/ros/melodic" FORCE )
endif()

set( ros_libs roscpp roscpp_serialization rosbag rosbag_storage rostime rosconsole console_bridge cpp_common )

add_subdirectory( applications )
add_subdirectory( diagnostic_msgs )
add_subdirectory( geometry_msgs )
add_subdirectory( nav_msgs )
add_subdirectory( sensor_msgs )
add_subdirectory( std_msgs )

install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/traits.h DESTINATION ${snark_INSTALL_INCLUDE_DIR}/ros )